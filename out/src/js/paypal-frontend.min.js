function registerClickListenerForSavedVaultRadioButtons(){document.querySelectorAll(".vaulting_paymentsource").forEach(function(e){e.onclick=function(){e.checked&&(document.getElementById("paypalVaultCheckoutButton").disabled=!1)}})}function registerClickListenerForTheVaultCheckoutButton(){document.getElementById("paypalVaultCheckoutButton").onclick=function(){document.querySelectorAll(".vaulting_paymentsource").forEach(function(t){if(t.checked){document.getElementById("payment_oscpaypal").click();let e=document.createElement("input");e.type="hidden",e.name="vaultingpaymentsource",e.value=t.dataset.index,document.getElementById("payment").appendChild(e),document.getElementById("paymentNextStepBottom").click()}})}}window.OxidPayPal={sdkLoaded:!1,onSDKLoaded:function(){this.sdkLoaded=!0},isSDKLoaded:function(){return this.sdkLoaded}},window.OxidPayPalGooglePay={baseRequest:{apiVersion:2,apiVersionMinor:0},paymentsClient:null,allowedPaymentMethods:null,merchantInfo:null,buttonId:null,token:null,selfLink:null,useGooglePayAddress:null,isSandbox:null,merchantName:null,totalPrice:null,currency:null,deliveryAddressMD5:null,language:null,loadingContainer:null,init:async function(){var e=document.getElementById("google_pay_button_data_container");e&&(this.token=e.dataset.token,this.selfLink=e.dataset.selfLink,this.useGooglePayAddress=!!Number(e.dataset.useGooglePayAddress),this.isSandbox=!!Number(e.dataset.isSandbox),this.merchantName=e.dataset.merchantName,this.totalPrice=e.dataset.totalPrice,this.currency=e.dataset.currency,this.deliveryAddressMD5=e.dataset.deliveryAddressMd5,this.language=e.dataset.language,e=document.getElementsByClassName(e.dataset.loadingContainerClassName),this.loadingContainer=e[0],await window.googlePayReady,this.onGooglePayLoaded())},getGoogleIsReadyToPayRequest:function(e){return Object.assign({},this.baseRequest,{allowedPaymentMethods:e})},getGooglePayConfig:async function(){var e;return null!=this.allowedPaymentMethods&&null!=this.merchantInfo||(e=await paypal.Googlepay().config(),this.allowedPaymentMethods=e.allowedPaymentMethods,this.merchantInfo=e.merchantInfo,this.merchantInfo.merchantName=this.merchantName),{allowedPaymentMethods:this.allowedPaymentMethods,merchantInfo:this.merchantInfo}},getGooglePaymentDataRequest:async function(){const e=Object.assign({},this.baseRequest);var{allowedPaymentMethods:t,merchantInfo:n}=await this.getGooglePayConfig();return e.transactionInfo=this.getGoogleTransactionInfo(),e.allowedPaymentMethods=t,e.merchantInfo=n,e.callbackIntents=["PAYMENT_AUTHORIZATION"],e.emailRequired=!0,e.shippingAddressRequired=this.useGooglePayAddress,e.shippingAddressParameters={phoneNumberRequired:!0},e},onPaymentAuthorized:function(t){return new Promise(function(e){this.processPayment(t).then(function(){e({transactionState:"SUCCESS"})}).catch(function(){e({transactionState:"ERROR"})})}.bind(this))},getGooglePaymentsClient:function(){return null===this.paymentsClient&&(this.paymentsClient=new google.payments.api.PaymentsClient({environment:this.isSandbox?"TEST":"PRODUCTION",paymentDataCallbacks:{onPaymentAuthorized:this.onPaymentAuthorized.bind(this)}})),this.paymentsClient},onGooglePayLoaded:async function(){if(window.OxidPayPal&&window.OxidPayPal.isSDKLoaded()){const t=this.getGooglePaymentsClient();var e=(await this.getGooglePayConfig())["allowedPaymentMethods"];t.isReadyToPay(this.getGoogleIsReadyToPayRequest(e)).then(function(e){e.result&&(this.loadingContainer.style.display="none",this.addGooglePayButton())}.bind(this)).catch(function(e){console.error(e)})}else window.setTimeout(this.onGooglePayLoaded.bind(this),500)},addGooglePayButton:function(){const e=this.getGooglePaymentsClient();var t=e.createButton({buttonType:"buy",buttonLocale:this.language,onClick:this.onGooglePaymentButtonClicked.bind(this)});document.getElementById("oscpaypal_googlepay").appendChild(t)},getGoogleTransactionInfo:function(){return{currencyCode:this.currency,totalPriceStatus:"FINAL",totalPrice:this.totalPrice,totalPriceLabel:"Total"}},onGooglePaymentButtonClicked:async function(){const e=await this.getGooglePaymentDataRequest(),t=(e.transactionInfo=this.getGoogleTransactionInfo(),this.getGooglePaymentsClient());t.loadPaymentData(e)},processPayment:async function(e){try{var t=this.selfLink+"&cl=oscpaypalproxy&fnc=createGooglePayOrder&paymentid=oscpaypal_googlepay&context=continue&stoken="+this.token,{id:n,status:a}=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(e=>e.json());return"CREATED"===a?(this.confirmOrder(n,e),{transactionState:"SUCCESS"}):"APPROVED"===a?(this.captureOrder(n),{transactionState:"SUCCESS"}):(console.error("Payment was not approved"),{transactionState:"ERROR"})}catch(e){return{transactionState:"ERROR",error:{message:e.message}}}},confirmOrder:async function(e,t){"PAYER_ACTION_REQUIRED"===(await paypal.Googlepay().confirmOrder({orderId:e,paymentMethodData:t.paymentMethodData})).status?(console.log("==== Confirm Payment Completed Payer Action Required ====="),this.googlePayUserActionRequired(e)):this.isSandbox&&console.log("==== confirmOrder: Not Approved =====")},googlePayUserActionRequired:function(e){paypal.Googlepay().initiatePayerAction({orderId:e}).then(async()=>{console.log("===== Payer Action Completed ====="),await this.executeOxidOrder(e),await this.captureOrder(e)})},executeOxidOrder:async function(e){var t=this.selfLink+"&cl=order&fnc=executeGooglePayOrder&context=continue&stoken="+this.token+"&sDeliveryAddressMD5="+this.deliveryAddressMD5;(createData=new FormData).append("orderID",e),fetch(t,{method:"POST",body:createData}).then(function(e){return e.json()}).then(function(e){console.log("==== Create OXID Order Completed ===="),"ERROR"===e.status&&location.reload()})},captureOrder:async function(e){(captureData=new FormData).append("orderID",e),await fetch(this.selfLink+"&cl=order&fnc=captureGooglePayOrder&context=continue&stoken="+this.token+"&sDeliveryAddressMD5="+this.deliveryAddressMD5,{method:"post",body:captureData}).then(function(e){return e.json()}).then(function(e){console.log("==== Capture Order Completed ====");var t=Array.isArray(e.location)&&e.location[0];window.location.href=this.selfLink+t+"&stoken="+this.token,"ERROR"===e.status&&location.reload()}.bind(this)).catch(e=>{console.error(e)})}},OxidPayPalGooglePay.init(),window.OxidPayPalGooglePay3DS={handle:async e=>{var t={...await window.OxidPayPalGooglePay.getGooglePaymentDataRequest(),paymentData:{tokenizationData:{type:"PAYMENT_GATEWAY",token:e.id},threeDSData:{authenticationParameters:{threeDSRequestData:{threeDSServerTransID:generateTransactionId(),challengeWindowSize:"03",messageCategory:"PAYMENT_AUTHENTICATION"}}}}};try{await paymentClient.loadPaymentData(t);if((await fetch("/v2/checkout/orders/"+e.id,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify([{op:"replace",path:"/payment_source/google_pay/card/authentication_result",value:{liability_shift:"POSSIBLE",three_d_secure:{authentication_status:"Y",enrollment_status:"Y"}}}])})).ok)return await fetch(`/v2/checkout/orders/${e.id}/capture`,{method:"POST"})}catch(e){throw console.error("3DS Authentication failed:",e),e}}},function(){"use strict";function e(){}e.prototype.getApproveLink=function(e){return this.getLinkByKeyword(e,"approve")},e.prototype.getPayerActionLink=function(e){return this.getLinkByKeyword(e,"payer-action")},e.prototype.getLinkByKeyword=function(e,t){e=e.find(e=>e.rel===t);return e?e.href:null},window.OxidPayPalHateoasLinks=e}(),document.addEventListener("DOMContentLoaded",function(){registerClickListenerForSavedVaultRadioButtons(),registerClickListenerForTheVaultCheckoutButton()});